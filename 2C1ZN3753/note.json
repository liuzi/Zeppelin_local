{
  "paragraphs": [
    {
      "text": "val a \u003d sc.parallelize(List((\u0027a\u0027,2,5),(\u0027b\u0027,4,7),(\u0027b\u0027,6,10))).map(s\u003d\u003e(s._1,((s._2,s._3))))\na.reduceByKey(_+_).map(e\u003d\u003e(e._1,e._2._1,e._2._2)).collect()",
      "dateUpdated": "Dec 1, 2016 2:56:51 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1479783326353_-16193012",
      "id": "20161122-105526_241979029",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\na: org.apache.spark.rdd.RDD[(Char, (Int, Int))] \u003d MapPartitionsRDD[551] at map at \u003cconsole\u003e:191\n\n\n\n\n\n\u003cconsole\u003e:194: error: type mismatch;\n found   : (Int, Int)\n required: String\n       a.reduceByKey(_+_).map(e\u003d\u003e(e._1,e._2._1,e._2._2)).collect()\n                       ^\n"
      },
      "dateCreated": "Nov 22, 2016 10:55:26 AM",
      "dateStarted": "Dec 1, 2016 2:56:51 PM",
      "dateFinished": "Dec 1, 2016 2:56:51 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val a \u003d sc.parallelize(List((1,2),(3,4),(3,6)))\na.reduceByKey((x,y) \u003d\u003e x + y).collect",
      "dateUpdated": "Dec 1, 2016 2:33:17 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1479785248625_1907589468",
      "id": "20161122-112728_1351671302",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\na: org.apache.spark.rdd.RDD[(Int, Int)] \u003d ParallelCollectionRDD[528] at parallelize at \u003cconsole\u003e:191\n\nres140: Array[(Int, Int)] \u003d Array((1,2), (3,10))\n"
      },
      "dateCreated": "Nov 22, 2016 11:27:28 AM",
      "dateStarted": "Dec 1, 2016 2:33:17 PM",
      "dateFinished": "Dec 1, 2016 2:33:19 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val c \u003d sc.parallelize(List((\"a\", 1), (\"a\", 2), (\"a\", 3), (\"b\", 1), (\"b\", 2), (\"c\", 1)))\nval cm \u003d c.map(e \u003d\u003e (e._1, (e._2, 0)))\nval cr \u003d cm.reduceByKey((e1, e2) \u003d\u003e (e1._1 + e2._1, e1._1/2 + e2._1/2))\nval cz \u003d cr.map(e \u003d\u003e (e._1, e._2._1, e._2._2))\ncz.collect\n\n\n",
      "dateUpdated": "Dec 1, 2016 2:51:54 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1480573997913_1316399227",
      "id": "20161201-143317_553188607",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nc: org.apache.spark.rdd.RDD[(String, Int)] \u003d ParallelCollectionRDD[530] at parallelize at \u003cconsole\u003e:191\n\ncm: org.apache.spark.rdd.RDD[(String, (Int, Int))] \u003d MapPartitionsRDD[531] at map at \u003cconsole\u003e:193\n\ncr: org.apache.spark.rdd.RDD[(String, (Int, Int))] \u003d ShuffledRDD[532] at reduceByKey at \u003cconsole\u003e:195\n\ncz: org.apache.spark.rdd.RDD[(String, Int, Int)] \u003d MapPartitionsRDD[533] at map at \u003cconsole\u003e:197\n\nres142: Array[(String, Int, Int)] \u003d Array((a,6,2), (b,3,1), (c,1,0))\n"
      },
      "dateCreated": "Dec 1, 2016 2:33:17 PM",
      "dateStarted": "Dec 1, 2016 2:51:54 PM",
      "dateFinished": "Dec 1, 2016 2:51:56 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Dec 1, 2016 2:52:03 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1480575107108_157532775",
      "id": "20161201-145147_997470680",
      "dateCreated": "Dec 1, 2016 2:51:47 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "/Learning/Time series solving",
  "id": "2C1ZN3753",
  "angularObjects": {
    "2BY98S9W2:shared_process": [],
    "2BZN39DZF:shared_process": [],
    "2BY515SJU:shared_process": [],
    "2BY63HPYF:shared_process": [],
    "2BXGT6S2K:shared_process": [],
    "2BZ613KSU:shared_process": [],
    "2BZ8A7E2E:shared_process": [],
    "2BZSKZKCV:shared_process": [],
    "2BXPP47F9:shared_process": [],
    "2BXU3K7UZ:shared_process": [],
    "2BYUGR38A:shared_process": [],
    "2BYBYAWVT:shared_process": [],
    "2C1KUKSFC:shared_process": [],
    "2BXESRBUA:shared_process": [],
    "2BYNRTR44:shared_process": [],
    "2BY67DHM2:shared_process": [],
    "2BXUY475Z:shared_process": [],
    "2BZPA2E8W:shared_process": []
  },
  "config": {},
  "info": {}
}